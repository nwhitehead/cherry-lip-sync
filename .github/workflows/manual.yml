
name: Manual Release
run-name: Release build for ${{ github.actor }} ðŸš€
on: [workflow_dispatch]
jobs:
  MacRelease:
    name: Mac build for release
    runs-on: macos-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Build
        run: |
          cargo build --release
          mkdir Cherry-Lip-Sync
          cp target/release/cherrylipsync Cherry-Lip-Sync/
          cp README.md LICENSE-APACHE LICENSE-MIT NOTICE Cherry-Lip-Sync/
          zip -r Cherry-Lip-Sync-macOS.zip Cherry-Lip-Sync/
      - uses: actions/upload-artifact@v4
        with:
          name: build-artifact-macos
          path: ./*.zip
  WindowsRelease:
    name: Windows build for release
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Get toolchain
        run: rustup target add x86_64-pc-windows-gnu
      - name: Get MinGW
        run: sudo apt install gcc-mingw-w64
      - name: Build
        run: |
          cargo build --release --target x86_64-pc-windows-gnu
          mkdir Cherry-Lip-Sync
          cp target/x86_64-pc-windows-gnu/release/cherrylipsync.exe Cherry-Lip-Sync/
          cp README.md LICENSE-APACHE LICENSE-MIT NOTICE Cherry-Lip-Sync/
          zip -r Cherry-Lip-Sync-Windows.zip Cherry-Lip-Sync/
      - uses: actions/upload-artifact@v4
        with:
          name: build-artifact-win
          path: ./*.zip
  LinuxRelease:
    name: Linux build for release
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Get toolchain
        run: rustup target add x86_64-unknown-linux-musl
      - name: Get Musl
        run: sudo apt install musl-tools
      - name: Build
        run: |
          cargo build --release --target x86_64-unknown-linux-musl
          mkdir Cherry-Lip-Sync
          cp target/x86_64-unknown-linux-musl/release/cherrylipsync Cherry-Lip-Sync/
          cp README.md LICENSE-APACHE LICENSE-MIT NOTICE Cherry-Lip-Sync/
          zip -r Cherry-Lip-Sync-Linux.zip Cherry-Lip-Sync/
      - uses: actions/upload-artifact@v4
        with:
          name: build-artifact-linux
          path: ./*.zip
  Upload:
    name: Save artifacts
    runs-on: ubuntu-latest
    needs: [MacRelease, WindowsRelease, LinuxRelease]
    steps:
      - name: Get build artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: build-artifact-*
          merge-multiple: true
      - name: Show what we have
        run: ls -R
      - name: Upload final artifact
        uses: actions/upload-artifact@v4
        with:
          name: all-artifacts
          path: ./*.zip
